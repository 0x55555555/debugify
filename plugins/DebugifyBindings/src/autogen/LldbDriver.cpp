// Autogenerated - do not change.
#include "../../DebugifyBindings/src/autogen/LldbDriver.h"
#include "bondage/RuntimeHelpersImpl.h"
#include "utility"
#include "tuple"
#include "../../../Eks/EksCore/include/Utilities/XStringRef.h"


using namespace LldbDriver;


bondage::Library g_bondage_library_LldbDriver(
  "LldbDriver",
  nullptr,
  0);
namespace LldbDriver
{
const bondage::Library &bindings()
{
  return g_bondage_library_LldbDriver;
}
}


// Exposing class ::LldbDriver::Debugger
struct LldbDriver_Debugger_create_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< Debugger::Pointer(*)() >, &::LldbDriver::Debugger::create, bondage::FunctionCaller> { };
struct LldbDriver_Debugger_loadTarget_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< std::shared_ptr<Target>(::LldbDriver::Debugger::*)(const Eks::StringRef &) >, &::LldbDriver::Debugger::loadTarget, bondage::FunctionCaller> { };

const bondage::Function LldbDriver_Debugger_methods[] = {
  bondage::FunctionBuilder::build<
    LldbDriver_Debugger_create_overload0_t
    >("create"),
  bondage::FunctionBuilder::build<
    LldbDriver_Debugger_loadTarget_overload0_t
    >("loadTarget")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  LldbDriver_Debugger,
  g_bondage_library_LldbDriver,
  ::LldbDriver,
  Debugger,
  void,
  LldbDriver_Debugger_methods,
  2);



// Exposing class ::LldbDriver::Target
struct LldbDriver_Target_moduleCount_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< size_t(::LldbDriver::Target::*)() >, &::LldbDriver::Target::moduleCount, bondage::FunctionCaller> { };
struct LldbDriver_Target_path_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< Eks::String(::LldbDriver::Target::*)() const >, &::LldbDriver::Target::path, bondage::FunctionCaller> { };

const bondage::Function LldbDriver_Target_methods[] = {
  bondage::FunctionBuilder::build<
    LldbDriver_Target_moduleCount_overload0_t
    >("moduleCount"),
  bondage::FunctionBuilder::build<
    LldbDriver_Target_path_overload0_t
    >("path")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  LldbDriver_Target,
  g_bondage_library_LldbDriver,
  ::LldbDriver,
  Target,
  void,
  LldbDriver_Target_methods,
  2);



