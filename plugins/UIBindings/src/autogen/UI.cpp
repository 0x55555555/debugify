// Autogenerated - do not change.
#include "../../UIBindings/src/autogen/UI.h"
#include "bondage/RuntimeHelpersImpl.h"
#include "utility"
#include "tuple"
#include "../../DebugifyBindings/ManualBindings/ManualBindings.h"
#include "../../UIBindings/QtBindings/QtWidgets.h"
#include "../../LldbDriver/include/Process.h"
#include "../../LldbDriver/include/Target.h"
#include "FileEditor.h"


using namespace UI;


bondage::Library g_bondage_library_UI(
  "UI",
  nullptr,
  0);
namespace UI
{
const bondage::Library &bindings()
{
  return g_bondage_library_UI;
}
}


// Exposing class ::UI::AboutToShowNotifier
struct UI_AboutToShowNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::AboutToShowNotifier::*)(std::function<void ()> &&) >, &::UI::AboutToShowNotifier::listen, bondage::FunctionCaller> { };
struct UI_AboutToShowNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::AboutToShowNotifier::*)(int) >, &::UI::AboutToShowNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_AboutToShowNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_AboutToShowNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_AboutToShowNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_AboutToShowNotifier,
  g_bondage_library_UI,
  ::UI,
  AboutToShowNotifier,
  void,
  UI_AboutToShowNotifier_methods,
  2);



// Exposing class ::UI::MainWindow
::UI::MainWindow * UI_MainWindow_MainWindow_overload0()
{
  auto result = bondage::WrappedClassHelper< ::UI::MainWindow >::create();
  return result;
}

::UI::MainWindow * UI_MainWindow_MainWindow_overload1(QWidget * inputArg0)
{
  auto result = bondage::WrappedClassHelper< ::UI::MainWindow >::create(std::forward<QWidget *>(inputArg0));
  return result;
}

QString UI_MainWindow_getOpenFilename_overload0(::UI::MainWindow & inputArg0, const QString & inputArg1)
{
  auto result = inputArg0.getOpenFilename(std::forward<const QString &>(inputArg1));
  return result;
}

QString UI_MainWindow_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::MainWindow::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_MainWindow_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::MainWindow::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_MainWindow_MainWindow_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::MainWindow *(*)() >, &UI_MainWindow_MainWindow_overload0, bondage::FunctionCaller> { };
struct UI_MainWindow_MainWindow_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::MainWindow *(*)(QWidget *) >, &UI_MainWindow_MainWindow_overload1, bondage::FunctionCaller> { };
struct MainWindow_MainWindow_overload_0 : Reflect::FunctionArgCountSelectorBlock<0,
      UI_MainWindow_MainWindow_overload0_t
      > { };
struct MainWindow_MainWindow_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_MainWindow_MainWindow_overload1_t
      > { };
struct MainWindow_MainWindow_overload : Reflect::FunctionArgumentCountSelector<
    MainWindow_MainWindow_overload_0,
    MainWindow_MainWindow_overload_1
    > { };
struct UI_MainWindow_aboutToClose_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::AboutToCloseNotifier *(::UI::MainWindow::*)() >, &::UI::MainWindow::aboutToClose, bondage::FunctionCaller> { };
struct UI_MainWindow_addConsole_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Console *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::addConsole, bondage::FunctionCaller> { };
struct UI_MainWindow_addEditor_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::EditableTextWindow *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::addEditor, bondage::FunctionCaller> { };
struct UI_MainWindow_addMenu_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Menu *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::addMenu, bondage::FunctionCaller> { };
struct UI_MainWindow_addTerminal_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Terminal *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::addTerminal, bondage::FunctionCaller> { };
struct UI_MainWindow_addToolBar_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::ToolBar *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::addToolBar, bondage::FunctionCaller> { };
struct UI_MainWindow_editorClosed_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::EditorNotifier *(::UI::MainWindow::*)() >, &::UI::MainWindow::editorClosed, bondage::FunctionCaller> { };
struct UI_MainWindow_editorOpened_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::EditorNotifier *(::UI::MainWindow::*)() >, &::UI::MainWindow::editorOpened, bondage::FunctionCaller> { };
struct UI_MainWindow_geometry_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(::UI::MainWindow::*)() const >, &::UI::MainWindow::geometry, bondage::FunctionCaller> { };
struct UI_MainWindow_getOpenFilename_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(::UI::MainWindow &, const QString &) >, &UI_MainWindow_getOpenFilename_overload0, Reflect::MethodInjectorBuilder<bondage::FunctionCaller>> { };
struct UI_MainWindow_getOpenFilename_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(::UI::MainWindow::*)(const QString &, const QString &) >, &::UI::MainWindow::getOpenFilename, bondage::FunctionCaller> { };
struct MainWindow_getOpenFilename_overload_2 : Reflect::FunctionArgCountSelectorBlock<2,
      UI_MainWindow_getOpenFilename_overload0_t
      > { };
struct MainWindow_getOpenFilename_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_MainWindow_getOpenFilename_overload1_t
      > { };
struct MainWindow_getOpenFilename_overload : Reflect::FunctionArgumentCountSelector<
    MainWindow_getOpenFilename_overload_2,
    MainWindow_getOpenFilename_overload_3
    > { };
struct UI_MainWindow_hideDock_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::MainWindow::*)(QWidget *) >, &::UI::MainWindow::hideDock, bondage::FunctionCaller> { };
struct UI_MainWindow_openFile_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Editor *(::UI::MainWindow::*)(const QString &, int) >, &::UI::MainWindow::openFile, bondage::FunctionCaller> { };
struct UI_MainWindow_openType_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Editor *(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::openType, bondage::FunctionCaller> { };
struct UI_MainWindow_process_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< Process::Pointer(::UI::MainWindow::*)() const >, &::UI::MainWindow::process, bondage::FunctionCaller> { };
struct UI_MainWindow_setGeometry_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< bool(::UI::MainWindow::*)(const QString &) >, &::UI::MainWindow::setGeometry, bondage::FunctionCaller> { };
struct UI_MainWindow_setProcess_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::MainWindow::*)(const Process::Pointer &) >, &::UI::MainWindow::setProcess, bondage::FunctionCaller> { };
struct UI_MainWindow_setTarget_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::MainWindow::*)(const Target::Pointer &) >, &::UI::MainWindow::setTarget, bondage::FunctionCaller> { };
struct UI_MainWindow_showDock_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::MainWindow::*)(QWidget *) >, &::UI::MainWindow::showDock, bondage::FunctionCaller> { };
struct UI_MainWindow_target_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< Target::Pointer(::UI::MainWindow::*)() const >, &::UI::MainWindow::target, bondage::FunctionCaller> { };
struct UI_MainWindow_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_MainWindow_tr_overload0, bondage::FunctionCaller> { };
struct UI_MainWindow_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::MainWindow::tr, bondage::FunctionCaller> { };
struct MainWindow_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_MainWindow_tr_overload0_t
      > { };
struct MainWindow_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_MainWindow_tr_overload1_t
      > { };
struct MainWindow_tr_overload : Reflect::FunctionArgumentCountSelector<
    MainWindow_tr_overload_1,
    MainWindow_tr_overload_3
    > { };
struct UI_MainWindow_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_MainWindow_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_MainWindow_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::MainWindow::trUtf8, bondage::FunctionCaller> { };
struct MainWindow_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_MainWindow_trUtf8_overload0_t
      > { };
struct MainWindow_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_MainWindow_trUtf8_overload1_t
      > { };
struct MainWindow_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    MainWindow_trUtf8_overload_1,
    MainWindow_trUtf8_overload_3
    > { };
struct UI_MainWindow_typeAdded_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::TypeNotifier *(::UI::MainWindow::*)() >, &::UI::MainWindow::typeAdded, bondage::FunctionCaller> { };

const bondage::Function UI_MainWindow_methods[] = {
  bondage::FunctionBuilder::buildOverload< MainWindow_MainWindow_overload >("MainWindow"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_aboutToClose_overload0_t
    >("aboutToClose"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_addConsole_overload0_t
    >("addConsole"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_addEditor_overload0_t
    >("addEditor"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_addMenu_overload0_t
    >("addMenu"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_addTerminal_overload0_t
    >("addTerminal"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_addToolBar_overload0_t
    >("addToolBar"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_editorClosed_overload0_t
    >("editorClosed"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_editorOpened_overload0_t
    >("editorOpened"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_geometry_overload0_t
    >("geometry"),
  bondage::FunctionBuilder::buildOverload< MainWindow_getOpenFilename_overload >("getOpenFilename"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_hideDock_overload0_t
    >("hideDock"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_openFile_overload0_t
    >("openFile"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_openType_overload0_t
    >("openType"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_process_overload0_t
    >("process"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_setGeometry_overload0_t
    >("setGeometry"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_setProcess_overload0_t
    >("setProcess"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_setTarget_overload0_t
    >("setTarget"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_showDock_overload0_t
    >("showDock"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_target_overload0_t
    >("target"),
  bondage::FunctionBuilder::buildOverload< MainWindow_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< MainWindow_trUtf8_overload >("trUtf8"),
  bondage::FunctionBuilder::build<
    UI_MainWindow_typeAdded_overload0_t
    >("typeAdded")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_MainWindow,
  g_bondage_library_UI,
  ::UI,
  MainWindow,
  ::QMainWindow,
  UI_MainWindow_methods,
  23);



// Exposing class ::UI::TypeNotifier
struct UI_TypeNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::TypeNotifier::*)(std::function<void (QString)> &&) >, &::UI::TypeNotifier::listen, bondage::FunctionCaller> { };
struct UI_TypeNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::TypeNotifier::*)(int) >, &::UI::TypeNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_TypeNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_TypeNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_TypeNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_TypeNotifier,
  g_bondage_library_UI,
  ::UI,
  TypeNotifier,
  void,
  UI_TypeNotifier_methods,
  2);



// Exposing class ::UI::AboutToCloseNotifier
struct UI_AboutToCloseNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::AboutToCloseNotifier::*)(std::function<void ()> &&) >, &::UI::AboutToCloseNotifier::listen, bondage::FunctionCaller> { };
struct UI_AboutToCloseNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::AboutToCloseNotifier::*)(int) >, &::UI::AboutToCloseNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_AboutToCloseNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_AboutToCloseNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_AboutToCloseNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_AboutToCloseNotifier,
  g_bondage_library_UI,
  ::UI,
  AboutToCloseNotifier,
  void,
  UI_AboutToCloseNotifier_methods,
  2);



// Exposing class ::UI::EditorNotifier
struct UI_EditorNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::EditorNotifier::*)(std::function<void (Editor *)> &&) >, &::UI::EditorNotifier::listen, bondage::FunctionCaller> { };
struct UI_EditorNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::EditorNotifier::*)(int) >, &::UI::EditorNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_EditorNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_EditorNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_EditorNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_EditorNotifier,
  g_bondage_library_UI,
  ::UI,
  EditorNotifier,
  void,
  UI_EditorNotifier_methods,
  2);



// Exposing class ::UI::OutputNotifier
struct UI_OutputNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::OutputNotifier::*)(std::function<void (QString)> &&) >, &::UI::OutputNotifier::listen, bondage::FunctionCaller> { };
struct UI_OutputNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::OutputNotifier::*)(int) >, &::UI::OutputNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_OutputNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_OutputNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_OutputNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_OutputNotifier,
  g_bondage_library_UI,
  ::UI,
  OutputNotifier,
  void,
  UI_OutputNotifier_methods,
  2);



// Exposing class ::UI::Menu
::UI::Menu * UI_Menu_Menu_overload0()
{
  auto result = bondage::WrappedClassHelper< ::UI::Menu >::create();
  return result;
}

QString UI_Menu_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::Menu::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_Menu_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::Menu::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_Menu_Menu_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::Menu *(*)() >, &UI_Menu_Menu_overload0, bondage::FunctionCaller> { };
struct UI_Menu_aboutToShow_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::AboutToShowNotifier *(::UI::Menu::*)() >, &::UI::Menu::aboutToShow, bondage::FunctionCaller> { };
struct UI_Menu_addAction_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QAction *(::UI::Menu::*)(const QString &, const std::function<void ()> &) >, &::UI::Menu::addAction, bondage::FunctionCaller> { };
struct UI_Menu_addMenu_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::Menu *(::UI::Menu::*)(const QString &) >, &::UI::Menu::addMenu, bondage::FunctionCaller> { };
struct UI_Menu_clear_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Menu::*)() >, &::UI::Menu::clear, bondage::FunctionCaller> { };
struct UI_Menu_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Menu_tr_overload0, bondage::FunctionCaller> { };
struct UI_Menu_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Menu::tr, bondage::FunctionCaller> { };
struct Menu_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Menu_tr_overload0_t
      > { };
struct Menu_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Menu_tr_overload1_t
      > { };
struct Menu_tr_overload : Reflect::FunctionArgumentCountSelector<
    Menu_tr_overload_1,
    Menu_tr_overload_3
    > { };
struct UI_Menu_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Menu_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_Menu_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Menu::trUtf8, bondage::FunctionCaller> { };
struct Menu_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Menu_trUtf8_overload0_t
      > { };
struct Menu_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Menu_trUtf8_overload1_t
      > { };
struct Menu_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    Menu_trUtf8_overload_1,
    Menu_trUtf8_overload_3
    > { };

const bondage::Function UI_Menu_methods[] = {
  bondage::FunctionBuilder::build<
    UI_Menu_Menu_overload0_t
    >("Menu"),
  bondage::FunctionBuilder::build<
    UI_Menu_aboutToShow_overload0_t
    >("aboutToShow"),
  bondage::FunctionBuilder::build<
    UI_Menu_addAction_overload0_t
    >("addAction"),
  bondage::FunctionBuilder::build<
    UI_Menu_addMenu_overload0_t
    >("addMenu"),
  bondage::FunctionBuilder::build<
    UI_Menu_clear_overload0_t
    >("clear"),
  bondage::FunctionBuilder::buildOverload< Menu_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< Menu_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_Menu,
  g_bondage_library_UI,
  ::UI,
  Menu,
  ::QMenu,
  UI_Menu_methods,
  7);



// Exposing class ::UI::ToolBar
::UI::ToolBar * UI_ToolBar_ToolBar_overload0()
{
  auto result = bondage::WrappedClassHelper< ::UI::ToolBar >::create();
  return result;
}

QString UI_ToolBar_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::ToolBar::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_ToolBar_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::ToolBar::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_ToolBar_ToolBar_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::ToolBar *(*)() >, &UI_ToolBar_ToolBar_overload0, bondage::FunctionCaller> { };
struct UI_ToolBar_addAction_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QAction *(::UI::ToolBar::*)(const QString &, const std::function<void ()> &) >, &::UI::ToolBar::addAction, bondage::FunctionCaller> { };
struct UI_ToolBar_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_ToolBar_tr_overload0, bondage::FunctionCaller> { };
struct UI_ToolBar_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::ToolBar::tr, bondage::FunctionCaller> { };
struct ToolBar_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_ToolBar_tr_overload0_t
      > { };
struct ToolBar_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_ToolBar_tr_overload1_t
      > { };
struct ToolBar_tr_overload : Reflect::FunctionArgumentCountSelector<
    ToolBar_tr_overload_1,
    ToolBar_tr_overload_3
    > { };
struct UI_ToolBar_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_ToolBar_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_ToolBar_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::ToolBar::trUtf8, bondage::FunctionCaller> { };
struct ToolBar_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_ToolBar_trUtf8_overload0_t
      > { };
struct ToolBar_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_ToolBar_trUtf8_overload1_t
      > { };
struct ToolBar_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    ToolBar_trUtf8_overload_1,
    ToolBar_trUtf8_overload_3
    > { };

const bondage::Function UI_ToolBar_methods[] = {
  bondage::FunctionBuilder::build<
    UI_ToolBar_ToolBar_overload0_t
    >("ToolBar"),
  bondage::FunctionBuilder::build<
    UI_ToolBar_addAction_overload0_t
    >("addAction"),
  bondage::FunctionBuilder::buildOverload< ToolBar_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< ToolBar_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_ToolBar,
  g_bondage_library_UI,
  ::UI,
  ToolBar,
  ::QToolBar,
  UI_ToolBar_methods,
  4);



// Exposing class ::UI::MarginClickNotifier
struct UI_MarginClickNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::MarginClickNotifier::*)(std::function<void (int)> &&) >, &::UI::MarginClickNotifier::listen, bondage::FunctionCaller> { };
struct UI_MarginClickNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::MarginClickNotifier::*)(int) >, &::UI::MarginClickNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_MarginClickNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_MarginClickNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_MarginClickNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_MarginClickNotifier,
  g_bondage_library_UI,
  ::UI,
  MarginClickNotifier,
  void,
  UI_MarginClickNotifier_methods,
  2);






// Exposing class ::UI::Editor
QString UI_Editor_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::Editor::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_Editor_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::Editor::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_Editor_key_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(::UI::Editor::*)() const >, &::UI::Editor::key, bondage::FunctionCaller> { };
struct UI_Editor_path_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(::UI::Editor::*)() const >, &::UI::Editor::path, bondage::FunctionCaller> { };
struct UI_Editor_title_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(::UI::Editor::*)() const >, &::UI::Editor::title, bondage::FunctionCaller> { };
struct UI_Editor_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Editor_tr_overload0, bondage::FunctionCaller> { };
struct UI_Editor_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Editor::tr, bondage::FunctionCaller> { };
struct Editor_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Editor_tr_overload0_t
      > { };
struct Editor_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Editor_tr_overload1_t
      > { };
struct Editor_tr_overload : Reflect::FunctionArgumentCountSelector<
    Editor_tr_overload_1,
    Editor_tr_overload_3
    > { };
struct UI_Editor_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Editor_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_Editor_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Editor::trUtf8, bondage::FunctionCaller> { };
struct Editor_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Editor_trUtf8_overload0_t
      > { };
struct Editor_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Editor_trUtf8_overload1_t
      > { };
struct Editor_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    Editor_trUtf8_overload_1,
    Editor_trUtf8_overload_3
    > { };

const bondage::Function UI_Editor_methods[] = {
  bondage::FunctionBuilder::build<
    UI_Editor_key_overload0_t
    >("key"),
  bondage::FunctionBuilder::build<
    UI_Editor_path_overload0_t
    >("path"),
  bondage::FunctionBuilder::build<
    UI_Editor_title_overload0_t
    >("title"),
  bondage::FunctionBuilder::buildOverload< Editor_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< Editor_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_Editor,
  g_bondage_library_UI,
  ::UI,
  Editor,
  ::QWidget,
  UI_Editor_methods,
  5);






// Exposing class ::UI::FileEditor
QString UI_FileEditor_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::FileEditor::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_FileEditor_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::FileEditor::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_FileEditor_addMarker_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::FileEditor::*)(UI::FileEditor::MarkerType, size_t) >, &::UI::FileEditor::addMarker, bondage::FunctionCaller> { };
struct UI_FileEditor_clearMarkers_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::FileEditor::*)(UI::FileEditor::MarkerType) >, &::UI::FileEditor::clearMarkers, bondage::FunctionCaller> { };
struct UI_FileEditor_focusOnLine_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::FileEditor::*)(size_t) >, &::UI::FileEditor::focusOnLine, bondage::FunctionCaller> { };
struct UI_FileEditor_makeKey_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const QString &) >, &::UI::FileEditor::makeKey, bondage::FunctionCaller> { };
struct UI_FileEditor_marginClicked_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::MarginClickNotifier *(::UI::FileEditor::*)() >, &::UI::FileEditor::marginClicked, bondage::FunctionCaller> { };
struct UI_FileEditor_removeMarker_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::FileEditor::*)(UI::FileEditor::MarkerType, size_t) >, &::UI::FileEditor::removeMarker, bondage::FunctionCaller> { };
struct UI_FileEditor_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_FileEditor_tr_overload0, bondage::FunctionCaller> { };
struct UI_FileEditor_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::FileEditor::tr, bondage::FunctionCaller> { };
struct FileEditor_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_FileEditor_tr_overload0_t
      > { };
struct FileEditor_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_FileEditor_tr_overload1_t
      > { };
struct FileEditor_tr_overload : Reflect::FunctionArgumentCountSelector<
    FileEditor_tr_overload_1,
    FileEditor_tr_overload_3
    > { };
struct UI_FileEditor_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_FileEditor_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_FileEditor_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::FileEditor::trUtf8, bondage::FunctionCaller> { };
struct FileEditor_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_FileEditor_trUtf8_overload0_t
      > { };
struct FileEditor_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_FileEditor_trUtf8_overload1_t
      > { };
struct FileEditor_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    FileEditor_trUtf8_overload_1,
    FileEditor_trUtf8_overload_3
    > { };

const bondage::Function UI_FileEditor_methods[] = {
  bondage::FunctionBuilder::build<
    UI_FileEditor_addMarker_overload0_t
    >("addMarker"),
  bondage::FunctionBuilder::build<
    UI_FileEditor_clearMarkers_overload0_t
    >("clearMarkers"),
  bondage::FunctionBuilder::build<
    UI_FileEditor_focusOnLine_overload0_t
    >("focusOnLine"),
  bondage::FunctionBuilder::build<
    UI_FileEditor_makeKey_overload0_t
    >("makeKey"),
  bondage::FunctionBuilder::build<
    UI_FileEditor_marginClicked_overload0_t
    >("marginClicked"),
  bondage::FunctionBuilder::build<
    UI_FileEditor_removeMarker_overload0_t
    >("removeMarker"),
  bondage::FunctionBuilder::buildOverload< FileEditor_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< FileEditor_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_FileEditor,
  g_bondage_library_UI,
  ::UI,
  FileEditor,
  ::UI::Editor,
  UI_FileEditor_methods,
  8);



// Exposing class ::UI::EditableTextWindow
::UI::EditableTextWindow * UI_EditableTextWindow_EditableTextWindow_overload0()
{
  auto result = bondage::WrappedClassHelper< ::UI::EditableTextWindow >::create();
  return result;
}

QString UI_EditableTextWindow_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::EditableTextWindow::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_EditableTextWindow_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::EditableTextWindow::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_EditableTextWindow_EditableTextWindow_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::EditableTextWindow *(*)() >, &UI_EditableTextWindow_EditableTextWindow_overload0, bondage::FunctionCaller> { };
struct UI_EditableTextWindow_clicked_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::ClickNotifier *(::UI::EditableTextWindow::*)() >, &::UI::EditableTextWindow::clicked, bondage::FunctionCaller> { };
struct UI_EditableTextWindow_setContents_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::EditableTextWindow::*)(const QString &) >, &::UI::EditableTextWindow::setContents, bondage::FunctionCaller> { };
struct UI_EditableTextWindow_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_EditableTextWindow_tr_overload0, bondage::FunctionCaller> { };
struct UI_EditableTextWindow_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::EditableTextWindow::tr, bondage::FunctionCaller> { };
struct EditableTextWindow_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_EditableTextWindow_tr_overload0_t
      > { };
struct EditableTextWindow_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_EditableTextWindow_tr_overload1_t
      > { };
struct EditableTextWindow_tr_overload : Reflect::FunctionArgumentCountSelector<
    EditableTextWindow_tr_overload_1,
    EditableTextWindow_tr_overload_3
    > { };
struct UI_EditableTextWindow_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_EditableTextWindow_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_EditableTextWindow_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::EditableTextWindow::trUtf8, bondage::FunctionCaller> { };
struct EditableTextWindow_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_EditableTextWindow_trUtf8_overload0_t
      > { };
struct EditableTextWindow_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_EditableTextWindow_trUtf8_overload1_t
      > { };
struct EditableTextWindow_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    EditableTextWindow_trUtf8_overload_1,
    EditableTextWindow_trUtf8_overload_3
    > { };

const bondage::Function UI_EditableTextWindow_methods[] = {
  bondage::FunctionBuilder::build<
    UI_EditableTextWindow_EditableTextWindow_overload0_t
    >("EditableTextWindow"),
  bondage::FunctionBuilder::build<
    UI_EditableTextWindow_clicked_overload0_t
    >("clicked"),
  bondage::FunctionBuilder::build<
    UI_EditableTextWindow_setContents_overload0_t
    >("setContents"),
  bondage::FunctionBuilder::buildOverload< EditableTextWindow_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< EditableTextWindow_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_EditableTextWindow,
  g_bondage_library_UI,
  ::UI,
  EditableTextWindow,
  ::QTextEdit,
  UI_EditableTextWindow_methods,
  5);



// Exposing class ::UI::ClickNotifier
struct UI_ClickNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::ClickNotifier::*)(std::function<void (QString)> &&) >, &::UI::ClickNotifier::listen, bondage::FunctionCaller> { };
struct UI_ClickNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::ClickNotifier::*)(int) >, &::UI::ClickNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_ClickNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_ClickNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_ClickNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_ClickNotifier,
  g_bondage_library_UI,
  ::UI,
  ClickNotifier,
  void,
  UI_ClickNotifier_methods,
  2);



// Exposing class ::UI::Console
QString UI_Console_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::Console::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_Console_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::Console::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_Console_append_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)(QString) >, &::UI::Console::append, bondage::FunctionCaller> { };
struct UI_Console_clear_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)() >, &::UI::Console::clear, bondage::FunctionCaller> { };
struct UI_Console_clearSubmit_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)() >, &::UI::Console::clearSubmit, bondage::FunctionCaller> { };
struct UI_Console_currentSubmit_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< const QString &(::UI::Console::*)() const >, &::UI::Console::currentSubmit, bondage::FunctionCaller> { };
struct UI_Console_deleteBack_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)() >, &::UI::Console::deleteBack, bondage::FunctionCaller> { };
struct UI_Console_input_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< UI::InputNotifier *(::UI::Console::*)() >, &::UI::Console::input, bondage::FunctionCaller> { };
struct UI_Console_moveHorizontal_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)(int) >, &::UI::Console::moveHorizontal, bondage::FunctionCaller> { };
struct UI_Console_moveVertical_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)(int) >, &::UI::Console::moveVertical, bondage::FunctionCaller> { };
struct UI_Console_setSubmit_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)(const QString &) >, &::UI::Console::setSubmit, bondage::FunctionCaller> { };
struct UI_Console_toEnd_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::Console::*)() >, &::UI::Console::toEnd, bondage::FunctionCaller> { };
struct UI_Console_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Console_tr_overload0, bondage::FunctionCaller> { };
struct UI_Console_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Console::tr, bondage::FunctionCaller> { };
struct Console_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Console_tr_overload0_t
      > { };
struct Console_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Console_tr_overload1_t
      > { };
struct Console_tr_overload : Reflect::FunctionArgumentCountSelector<
    Console_tr_overload_1,
    Console_tr_overload_3
    > { };
struct UI_Console_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Console_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_Console_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Console::trUtf8, bondage::FunctionCaller> { };
struct Console_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Console_trUtf8_overload0_t
      > { };
struct Console_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Console_trUtf8_overload1_t
      > { };
struct Console_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    Console_trUtf8_overload_1,
    Console_trUtf8_overload_3
    > { };

const bondage::Function UI_Console_methods[] = {
  bondage::FunctionBuilder::build<
    UI_Console_append_overload0_t
    >("append"),
  bondage::FunctionBuilder::build<
    UI_Console_clear_overload0_t
    >("clear"),
  bondage::FunctionBuilder::build<
    UI_Console_clearSubmit_overload0_t
    >("clearSubmit"),
  bondage::FunctionBuilder::build<
    UI_Console_currentSubmit_overload0_t
    >("currentSubmit"),
  bondage::FunctionBuilder::build<
    UI_Console_deleteBack_overload0_t
    >("deleteBack"),
  bondage::FunctionBuilder::build<
    UI_Console_input_overload0_t
    >("input"),
  bondage::FunctionBuilder::build<
    UI_Console_moveHorizontal_overload0_t
    >("moveHorizontal"),
  bondage::FunctionBuilder::build<
    UI_Console_moveVertical_overload0_t
    >("moveVertical"),
  bondage::FunctionBuilder::build<
    UI_Console_setSubmit_overload0_t
    >("setSubmit"),
  bondage::FunctionBuilder::build<
    UI_Console_toEnd_overload0_t
    >("toEnd"),
  bondage::FunctionBuilder::buildOverload< Console_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< Console_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_Console,
  g_bondage_library_UI,
  ::UI,
  Console,
  ::QWidget,
  UI_Console_methods,
  12);



// Exposing class ::UI::Terminal
QString UI_Terminal_tr_overload0(const char * inputArg0)
{
  auto result = ::UI::Terminal::tr(std::forward<const char *>(inputArg0));
  return result;
}

QString UI_Terminal_trUtf8_overload0(const char * inputArg0)
{
  auto result = ::UI::Terminal::trUtf8(std::forward<const char *>(inputArg0));
  return result;
}

struct UI_Terminal_tr_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Terminal_tr_overload0, bondage::FunctionCaller> { };
struct UI_Terminal_tr_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Terminal::tr, bondage::FunctionCaller> { };
struct Terminal_tr_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Terminal_tr_overload0_t
      > { };
struct Terminal_tr_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Terminal_tr_overload1_t
      > { };
struct Terminal_tr_overload : Reflect::FunctionArgumentCountSelector<
    Terminal_tr_overload_1,
    Terminal_tr_overload_3
    > { };
struct UI_Terminal_trUtf8_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *) >, &UI_Terminal_trUtf8_overload0, bondage::FunctionCaller> { };
struct UI_Terminal_trUtf8_overload1_t : Reflect::FunctionCall<Reflect::FunctionSignature< QString(*)(const char *, const char *, int) >, &::UI::Terminal::trUtf8, bondage::FunctionCaller> { };
struct Terminal_trUtf8_overload_1 : Reflect::FunctionArgCountSelectorBlock<1,
      UI_Terminal_trUtf8_overload0_t
      > { };
struct Terminal_trUtf8_overload_3 : Reflect::FunctionArgCountSelectorBlock<3,
      UI_Terminal_trUtf8_overload1_t
      > { };
struct Terminal_trUtf8_overload : Reflect::FunctionArgumentCountSelector<
    Terminal_trUtf8_overload_1,
    Terminal_trUtf8_overload_3
    > { };

const bondage::Function UI_Terminal_methods[] = {
  bondage::FunctionBuilder::buildOverload< Terminal_tr_overload >("tr"),
  bondage::FunctionBuilder::buildOverload< Terminal_trUtf8_overload >("trUtf8")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_Terminal,
  g_bondage_library_UI,
  ::UI,
  Terminal,
  ::UI::Console,
  UI_Terminal_methods,
  2);



// Exposing class ::UI::InputNotifier
struct UI_InputNotifier_listen_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< int(::UI::InputNotifier::*)(std::function<void (Eks::String)> &&) >, &::UI::InputNotifier::listen, bondage::FunctionCaller> { };
struct UI_InputNotifier_remove_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< void(::UI::InputNotifier::*)(int) >, &::UI::InputNotifier::remove, bondage::FunctionCaller> { };

const bondage::Function UI_InputNotifier_methods[] = {
  bondage::FunctionBuilder::build<
    UI_InputNotifier_listen_overload0_t
    >("listen"),
  bondage::FunctionBuilder::build<
    UI_InputNotifier_remove_overload0_t
    >("remove")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_InputNotifier,
  g_bondage_library_UI,
  ::UI,
  InputNotifier,
  void,
  UI_InputNotifier_methods,
  2);



// Exposing class ::UI::Application
::UI::Application * UI_Application_Application_overload0(const QString & inputArg0)
{
  auto result = bondage::WrappedClassHelper< ::UI::Application >::create(std::forward<const QString &>(inputArg0));
  return result;
}

struct UI_Application_Application_overload0_t : Reflect::FunctionCall<Reflect::FunctionSignature< ::UI::Application *(*)(const QString &) >, &UI_Application_Application_overload0, bondage::FunctionCaller> { };

const bondage::Function UI_Application_methods[] = {
  bondage::FunctionBuilder::build<
    UI_Application_Application_overload0_t
    >("Application")
};


BONDAGE_IMPLEMENT_EXPOSED_CLASS(
  UI_Application,
  g_bondage_library_UI,
  ::UI,
  Application,
  ::QApplication,
  UI_Application_methods,
  1);


#include "CastHelper.QWidget.h"

const bondage::WrappedClass *UI_QWidget_caster(const void *vPtr)
{
  auto ptr = static_cast<const ::QWidget*>(vPtr);

  if (Crate::CastHelper< ::QWidget, ::UI::EditableTextWindow >::canCast(ptr))
  {
    return &UI_EditableTextWindow;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::Terminal >::canCast(ptr))
  {
    return &UI_Terminal;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::Menu >::canCast(ptr))
  {
    return &UI_Menu;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::ToolBar >::canCast(ptr))
  {
    return &UI_ToolBar;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::MainWindow >::canCast(ptr))
  {
    return &UI_MainWindow;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::FileEditor >::canCast(ptr))
  {
    return &UI_FileEditor;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::Console >::canCast(ptr))
  {
    return &UI_Console;
  }
  if (Crate::CastHelper< ::QWidget, ::UI::Editor >::canCast(ptr))
  {
    return &UI_Editor;
  }
  return nullptr;
}

bondage::CastHelperLibrary g_UI_QWidget_caster(bondage::WrappedClassFinder< ::QWidget >::castHelper(), UI_QWidget_caster);

#include "CastHelper.QApplication.h"

const bondage::WrappedClass *UI_QApplication_caster(const void *vPtr)
{
  auto ptr = static_cast<const ::QApplication*>(vPtr);

  if (Crate::CastHelper< ::QApplication, ::UI::Application >::canCast(ptr))
  {
    return &UI_Application;
  }
  return nullptr;
}

bondage::CastHelperLibrary g_UI_QApplication_caster(bondage::WrappedClassFinder< ::QApplication >::castHelper(), UI_QApplication_caster);


